name: CMake on multiple platforms

on:
  push:
    branches: ["dev_server", "dev_client"]
  pull_request:
    branches: ["dev", "main", "feat_updage_cmake"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        cpp_compiler: [ g++, clang++, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: cl
    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake ${{ matrix.c_compiler }} ${{ matrix.cpp_compiler }}
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_TOOLCHAIN_FILE=${{ steps.strings.outputs.build-output-dir }}/conan_toolchain.cmake
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      run: ctest --test-dir ${{ steps.strings.outputs.build-output-dir }} --output-on-failure
